- name: Pull image and Run Container
  hosts: featureui
  gather_facts: false
  become: yes

  tasks:
    - name : Ping Server
      ping:
      tags:
        - ping
    
    - name: Docker Service Check
      service:
       name: docker
       state: started
      tags:
        - check

    - name: Stop Running App
      docker_container:
       name: "{{ app }}"
       image: "{{ ContainerRegistry }}/{{ repoName }}/{{ app }}"
       state: absent
      tags:
        - stop-app

    - name: Clean Images and Containers
      shell: docker rmi -f $(docker images "{{ ContainerRegistry }}/{{ repoName }}/{{ app }}" -q )
      ignore_errors: yes
      tags:
         - remove-img

    - name: Log in Docker
      docker_login:
       registry: https://{{ ContainerRegistry}}
       username: "{{ rusername }}"
       password: "{{ rpassword }}"
       reauthorize: yes
      tags:
        - login

    - name: Pull Image-{{ app }}
      docker_image:
       name: "{{ ContainerRegistry }}/{{ repoName }}/{{ app }}:{{ version }}"
       repository: "{{ ContainerRegistry }}"
       source: pull
      tags:
        - get-app



    - name: Log out Docker
      docker_login:
       state: absent
      tags:
         - logout

    - name: Run App in container
      docker_container:
       image: "{{ ContainerRegistry }}/{{ repoName }}/{{ app }}:{{ version }}"
       name: "{{ app }}"
       state: started
       detach: yes
       restart_policy: unless-stopped
       volumes:
         - /home/admin/configs:/etc/nginx/conf.d
         - /home/admin/certs:/etc/nginx/certs
       published_ports:
          - "{{ hport }}:{{ cport }}"
       env:
          TYPE: "{{ type }}"
          BRANCH: "{{ branch }}"
          PROJECT: "{{ project }}"
          VAULT_TOKEN: "{{ token }}"
          VAULT_ADDR: "{{ vaulturl }}"

      tags:
        - run-app

    - name: Check Website
      uri:
        url: "{{ url }}"
        method: GET
        validate_certs: no
      register: _result
      until: _result.status == 200
      retries: 5
      delay: 10

    - debug:
        msg: "Website status is OK # {{ _result.status }}"




